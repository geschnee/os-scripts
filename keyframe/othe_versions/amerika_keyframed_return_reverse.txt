// Herzstein Dev

//The Script moves an object to a position with a keyframe (possibly across sim Bounds), when an avatar sits on it.
//When the avatar stands up, the object disappears slowly and is then deleted.
//The avatar will be informed to stand up after the movement, if the avatar doesn't stand up after a few seconds, he is ejected.


//chose the next variables yourself:

string textAboveObject="Sit down to travel to exhibition 03";
list KFMlist=[<0,0,0>,ZERO_ROTATION,3, //zero movement, zero rotation, 3 seconds duration (waiting)
<0,0,5>,ZERO_ROTATION,5, //5 meters up, zero rotation, 5 seconds duration
<0,0,20>,ZERO_ROTATION,5, //20 meters up, zero rotation, 5 seconds duration
<10,0,0>,ZERO_ROTATION,5, //10 meters x, zero rotation, 5 seconds duration
<10,0,0>,ZERO_ROTATION,10]; //10 meters x, zero rotation, 10 seconds duration

integer CHANNEL_ID=8;
//channel for other objects to register the start of movement

string lift_up="Lift up to art exhibition 03 started";

//internal variables:

integer status=0; 
//0 --- not started
//1 --- started

float keyframe_duration;

integer isDisappearing=0;
float alpha=1;
float alpha_step=0.05;

remove_chair() {
	//put your particle effects here


	// delete object attached to script
	isDisappearing=1; //start the disappearing process
	llSetTimerEvent(0.1);
}

start_journey() {
	llSay(0, lift_up);


	llSay(CHANNEL_ID, "keyframed motion starting");
	//another script will use this to spawn new chairs
	
	//put your particle effects here
	
	
	
	llSetKeyframedMotion( KFMlist, [KFM_MODE, KFM_FORWARD]);
	
	//set timer event (keyframe movement_finished and eject_passenger)
	
	float eject_time=keyframe_duration+5; 
	//will be ejected 5 seconds after arrival (if the avatar didn't stand up before
	
	llSetTimerEvent(keyframe_duration);
	llSetTimerEvent(eject_time);
}

movement_finished() {
	llSay(0, "Please stand up");
}

eject_passenger() {
	llUnSit(llGetLinkKey(llGetNumberOfPrims()));
}

default
{   
	state_entry()
    {   
        llSetText(textAboveObject, <1.0, 1.0, 1.0>,1.0);
		
		//sum of all the movement durations of the keyframe
		list duration_indexes=llList2ListStrided(KFMlist, 3, -1, 3);
		keyframe_duration=llListStatistics(LIST_STAT_SUM, KFMlist);
    }
    
    timer()
    {
		if (isDisappearing==1) {
			//code for disappearing process
		
			alpha-=alpha_step;
			if(alpha<=0) {
				
				break;
			}
			//llSetLinkAlpha(LINK_SET, alpha, ALL_SIDES);
			llSetTimerEvent(0.1);
			
		} else {
			//code for when the movement is finished and when the passenger is ejected
		
			if(status==0) {
				status=1;
				movement_finished();
			} else if(status==1){
				eject_passenger();
			}
		}	
    }
	
	changed( integer change){
		//register object status changes
	
		if(change & CHANGED_LINK) //changes to the linked objects
        {
            integer links = 0;
            if(llGetObjectPrimCount(llGetKey()) < (links = llGetNumberOfPrims()))
            {
                //someone sat down
				start_journey();
            }
            else {
				//someone stood up
				remove_chair();
				llSetKeyframedMotion( KFMlist, [KFM_MODE, KFM_REVERSE]);

			}
        }
	}
}